
Variables = "VariableExpr ArrayPatt JsonPatt RestPatt";
  
module.exports = {
	"RootScope"     : "Root"
	"FunctionScope" : "FunctionExpr FunctionDecl GetterDecl SetterDecl MethodDecl ArrowExpr ConstructorDecl"
	"ClassScope"    : "ClassExpr ClassDecl"
	"LetScope"      : "IfPatt ElseIfPatt ElsePatt WhileStam DoWhileStam WithStam ForStam CaseStam DefaultStam TryPatt CatchPatt FinallyPatt"
	// 
	"class"     : [
		"NameExpr -> ClassDecl"
		]
	"function"  : [
		"NameExpr -> FunctionDecl ConstructorDecl"
		"NameExpr -> GetterDecl SetterDecl MethodDecl -> ExportDecl"
		"NameExpr -> MethodDecl"
		]
	"proto"     : [
		"NameExpr -> GetterDecl SetterDecl MethodDecl --> ClassExpr ClassDecl"
		"VariableExpr -> AssignExpr --> ClassExpr ClassDecl"
		]
	"static"    : [
		"NameExpr -> MethodDecl -> StaticDecl"
		"${Variables} > Assign[0] -> StaticDecl"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"const"     : [
		"${Variables} > Assign[0] -> ConstDecl"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"var"   : [
		"${Variables} > Assign[0] -> VarDecl VarPatt"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"let"       : [
		"${Variables} > Assign[0] -> LetDecl"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"undefined" : [
		"${Variables} > Assign[0] -> ExportDecl"
		"${Variables} -> Assign[0]"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"unknow"    : [
		"${Variables}"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
	"argument"  : [
		"${Variables} > Assign[0] -> ArgusExpr"
		"PropertyInit[0] < JsonPatt ArrayPatt"
		]
}